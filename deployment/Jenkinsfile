pipeline {
    agent any

    environment {
        PROJECT_NAME = "TodoListCarlos"
        DOCKER_IMAGE = "todolistcarlos/todolistcarlos:latest"
        KUBECONFIG_CREDENTIALS_ID = '5c901259-27f9-49c5-abcf-6351cfe129c1'
    }

    stages {

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build(DOCKER_IMAGE, '-f deployment/Dockerfile .')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://192.168.0.100:32500/v2/_catalog/', '') {
                        docker.image(DOCKER_IMAGE).push()
                    }
                }
            }
        }

        stage('Deploy TodoListCarlos to Kubernetes') {
                    steps {
                        withCredentials(bindings: [string(credentialsId: KUBECONFIG_CREDENTIALS_ID, variable: 'api-token')]) {
                            sh "kubectl --token $api_token --server https://192.168.0.100:31919 --insecure-skip-tls-verify=true get ns"
                        }
                    }
                }

        stage('Deploy to pods Kubernetes') {
            steps {
                withCredentials(bindings: [string(credentialsId: KUBECONFIG_CREDENTIALS_ID, variable: 'api-token')]) {
                    sh 'kubectl --token $api_token --server https://192.168.0.100:31919 --insecure-skip-tls-verify=true apply -f deployment/deployment.yaml'
                    sh 'kubectl apply -f deployment/service.yaml'
                }
            }
        }
    }
}